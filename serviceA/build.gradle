buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id "com.palantir.docker" version "0.20.1"
  id "com.palantir.docker-run" version "0.20.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-starter-kubernetes:0.3.0.RELEASE')
	compile('org.springframework.cloud:spring-cloud-kubernetes-config:0.3.0.RELEASE')
	compile('org.springframework.cloud:spring-cloud-starter-zipkin:2.0.1.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-log4j2')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	configurations {
    	all*.exclude module : 'spring-boot-starter-logging'
	}
}

def lowerCaseJarName = bootJar.baseName.toLowerCase();

version = ext.version

docker {
    dependsOn build
    name "ivanarandjelovic/${lowerCaseJarName}:v${version}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

dockerRun {
    name "${lowerCaseJarName}"
    image "ivanarandjelovic/${lowerCaseJarName}:v${version}"
//    volumes 'hostvolume': '/containervolume'
    ports '8082:8082'
    daemonize true
//    env 'MYVAR1': 'MYVALUE1', 'MYVAR2': 'MYVALUE2'
//    command 'sleep', '100'
//    network "spring"
}
